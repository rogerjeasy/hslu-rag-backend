version: '3.8'
services:
  api:
    build:
      context: .
      target: development
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    volumes:
      - .:/app
      - ./chroma_db:/app/chroma_db
    env_file:
      - .env
    environment:
      - ENV=development
      - CHROMA_PERSIST_DIR=/app/chroma_db
      - PORT=${PORT:-8000}
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   command: redis-server --save 60 1 --loglevel warning
  #   restart: unless-stopped

  # Optional local vector database service
  # Uncomment if you want to use a standalone Chroma server
  # chroma:
  #   image: ghcr.io/chroma-core/chroma:latest
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - chroma-data:/chroma/chroma
  #   environment:
  #     - ALLOW_RESET=true
  #     - ANONYMIZED_TELEMETRY=false
  #   restart: unless-stopped

# volumes:
#   redis-data:
  # chroma-data: